* Notes
<2022-10-26 Wed 18:05>: I set this lab up with these commands:
#+begin_src bash
bundle install
rails db:migrate db:seed
#+end_src

Related output:
#+begin_src bash
samuelbanya@Samuels-MBP ~/hub/Development/code/phase-4/phase-4-active-record-associations-review-readme $ rails db:migrate db:seed
Warning: the running version of Bundler (2.1.2) is older than the version that created the lockfile (2.2.16). We suggest you to upgrade to the version that created the lockfile by running `gem install bundler:2.2.16`.
Resolving dependencies...
The dependency tzinfo-data (>= 0) will be unused by any of the platforms Bundler is installing for. Bundler is installing for x86_64-darwin-19, x86_64-darwin-21, ruby but the dependency is only for x86-mingw32, x86-mswin32, x64-mingw32, java. To add those platforms to the bundle, run `bundle lock --add-platform x86-mingw32 x86-mswin32 x64-mingw32 java`.
== 20210506144424 CreateAuthors: migrating ====================================
-- create_table(:authors)
   -> 0.0017s
== 20210506144424 CreateAuthors: migrated (0.0018s) ===========================

== 20210506144614 CreatePosts: migrating ======================================
-- create_table(:posts)
   -> 0.0026s
== 20210506144614 CreatePosts: migrated (0.0026s) =============================

== 20210506151638 CreateTags: migrating =======================================
-- create_table(:tags)
   -> 0.0019s
== 20210506151638 CreateTags: migrated (0.0019s) ==============================

== 20210506151659 CreatePostTags: migrating ===================================
-- create_table(:post_tags)
   -> 0.0026s
== 20210506151659 CreatePostTags: migrated (0.0026s) ==========================

== 20210506151732 CreateProfiles: migrating ===================================
-- create_table(:profiles)
   -> 0.0020s
== 20210506151732 CreateProfiles: migrated (0.0021s) ==========================
#+end_src

I then noticed that the lab didn't really mention the fact that they need to create another migration to add a foreign key, aka 'author_id' to the 'posts' table, so I added one accordingly via the 'rails g migration --no-test-framework' command:
#+begin_src bash
samuelbanya@Samuels-MBP ~/hub/Development/code/phase-4/phase-4-active-record-associations-review-readme $ rails g migration add_foreign_key_to_posts_table --no-test-framework
Warning: the running version of Bundler (2.1.2) is older than the version that created the lockfile (2.2.16). We suggest you to upgrade to the version that created the lockfile by running `gem install bundler:2.2.16`.
The dependency tzinfo-data (>= 0) will be unused by any of the platforms Bundler is installing for. Bundler is installing for ruby, x86_64-darwin-19, x86_64-darwin-21 but the dependency is only for x86-mingw32, x86-mswin32, x64-mingw32, java. To add those platforms to the bundle, run `bundle lock --add-platform x86-mingw32 x86-mswin32 x64-mingw32 java`.
      invoke  active_record
      create    db/migrate/20221026231054_add_foreign_key_to_posts_table.rb
#+end_src

I then adjusted the 'db/migrate/20221026231054_add_foreign_key_to_posts_table.rb' migration file with the following contents:
#+begin_src ruby
class AddForeignKeyToPostsTable < ActiveRecord::Migration[6.1]
  def change
    add_column :posts, :author_id, :integer
  end
end
#+end_src

I tried the lab's example commands in 'rails c' console, but they didn't work:
#+begin_src ruby
samuelbanya@Samuels-MBP ~/hub/Development/code/phase-4/phase-4-active-record-associations-review-readme $ rails c
Warning: the running version of Bundler (2.1.2) is older than the version that created the lockfile (2.2.16). We suggest you to upgrade to the version that created the lockfile by running `gem install bundler:2.2.16`.
The dependency tzinfo-data (>= 0) will be unused by any of the platforms Bundler is installing for. Bundler is installing for ruby, x86_64-darwin-19, x86_64-darwin-21 but the dependency is only for x86-mingw32, x86-mswin32, x64-mingw32, java. To add those platforms to the bundle, run `bundle lock --add-platform x86-mingw32 x86-mswin32 x64-mingw32 java`.
Loading development environment (Rails 6.1.3.2)
2.7.0 :001 > Author.find(post.author_id)
Traceback (most recent call last):
        1: from (irb):1
NameError (undefined local variable or method `post' for main:Object)
2.7.0 :002 > Post.where("author_id = ?", author.id)
Traceback (most recent call last):
        2: from (irb):1
        1: from (irb):2:in `rescue in irb_binding'
NameError (undefined local variable or method `author' for main:Object)
#+end_src

I then adjusted the 'app/models/post.rb' Model file with the following 'belongs_to' Active Record association:
#+begin_src ruby
class Post < ApplicationRecord
    belongs_to :author
end
#+end_src

I then followed the lab's example in 'rails c' to use the '.author' method for an example variable pointing to 'Post.first()':
#+begin_src ruby
samuelbanya@Samuels-MBP ~/hub/Development/code/phase-4/phase-4-active-record-associations-review-readme $ rails c
Warning: the running version of Bundler (2.1.2) is older than the version that created the lockfile (2.2.16). We suggest you to upgrade to the version that created the lockfile by running `gem install bundler:2.2.16`.
The dependency tzinfo-data (>= 0) will be unused by any of the platforms Bundler is installing for. Bundler is installing for ruby, x86_64-darwin-19, x86_64-darwin-21 but the dependency is only for x86-mingw32, x86-mswin32, x64-mingw32, java. To add those platforms to the bundle, run `bundle lock --add-platform x86-mingw32 x86-mswin32 x64-mingw32 java`.
Loading development environment (Rails 6.1.3.2)
2.7.0 :001 > post = Post.first()
   (0.7ms)  SELECT sqlite_version(*)
  Post Load (0.1ms)  SELECT "posts".* FROM "posts" ORDER BY "posts"."id" ASC LIMIT ?  [["LIMIT", 1]]
2.7.0 :002 > post.author
  Author Load (0.1ms)  SELECT "authors".* FROM "authors" WHERE "authors"."id" = ? LIMIT ?  [["id", 1], ["LIMIT", 1]]
 => #<Author id: 1, name: "Leeroy Jenkins", created_at: "2022-10-26 23:05:35.506242000 +0000", updated_at: "2022-10-26 23:05:35.506242000 +0000">
#+end_src

I then adjusted the 'app/models/author.rb' Author Model file with the following 'has_many' relationship to the 'Posts' model:
#+begin_src ruby
class Author < ApplicationRecord
    has_many :posts
end
#+end_src

I then opened up 'rails c' console again to check the relationship so that I can utilize '.posts()' for a variable pointing to the 'Author' database table model
#+begin_src bash
samuelbanya@Samuels-MBP ~/hub/Development/code/phase-4/phase-4-active-record-associations-review-readme $ rails c
Warning: the running version of Bundler (2.1.2) is older than the version that created the lockfile (2.2.16). We suggest you to upgrade to the version that created the lockfile by running `gem install bundler:2.2.16`.
The dependency tzinfo-data (>= 0) will be unused by any of the platforms Bundler is installing for. Bundler is installing for ruby, x86_64-darwin-19, x86_64-darwin-21 but the dependency is only for x86-mingw32, x86-mswin32, x64-mingw32, java. To add those platforms to the bundle, run `bundle lock --add-platform x86-mingw32 x86-mswin32 x64-mingw32 java`.
Loading development environment (Rails 6.1.3.2)
2.7.0 :001 > author = Author.last
   (0.8ms)  SELECT sqlite_version(*)
  Author Load (0.1ms)  SELECT "authors".* FROM "authors" ORDER BY "authors"."id" DESC LIMIT ?  [["LIMIT", 1]]
2.7.0 :002 > author.posts()
  Post Load (0.2ms)  SELECT "posts".* FROM "posts" WHERE "posts"."author_id" = ? /* loading for inspect */ LIMIT ?  [["author_id", 3], ["LIMIT", 11]]
 => #<ActiveRecord::Associations::CollectionProxy [#<Post id: 3, title: "Quia culpa magni nemo.", content: "Sed iure corrupti. Consectetur est autem. Non repe...", author_id: 3, created_at: "2022-10-26 23:05:36.485340000 +0000", updated_at: "2022-10-26 23:05:36.485340000 +0000">, #<Post id: 4, title: "Minus exercitationem rem quod.", content: "Laudantium maxime ab. Tempore et aperiam. Pariatur...", author_id: 3, created_at: "2022-10-26 23:05:36.488927000 +0000", updated_at: "2022-10-26 23:05:36.488927000 +0000">]>
#+end_src

I then ran a few more examples in 'rails c' along with the lab:
#+begin_src ruby
samuelbanya@Samuels-MBP ~/hub/Development/code/phase-4/phase-4-active-record-associations-review-readme $ rails c
2.7.0 :002 > author = Author.first()
   (1.1ms)  SELECT sqlite_version(*)
  Author Load (0.1ms)  SELECT "authors".* FROM "authors" ORDER BY "authors"."id" ASC LIMIT ?  [["LIMIT", 1]]
2.7.0 :003 > new_post = author.posts.create(title: "Web Development for Cats")
  TRANSACTION (0.1ms)  begin transaction
  Post Create (1.1ms)  INSERT INTO "posts" ("title", "author_id", "created_at", "updated_at") VALUES (?, ?, ?, ?)  [["title", "Web Development for Cats"], ["author_id", 1], ["created_at", "2022-10-26 23:20:29.449263"], ["updated_at", "2022-10-26 23:20:29.449263"]]
  TRANSACTION (3.8ms)  commit transaction
2.7.0 :004 > author.posts
  Post Load (0.3ms)  SELECT "posts".* FROM "posts" WHERE "posts"."author_id" = ? /* loading for inspect */ LIMIT ?  [["author_id", 1], ["LIMIT", 11]]
 => #<ActiveRecord::Associations::CollectionProxy [#<Post id: 1, title: "Rem est porro cum.", content: "Provident a qui. Aut fugit pariatur. Ad aut volupt...", author_id: 1, created_at: "2022-10-26 23:05:36.476858000 +0000", updated_at: "2022-10-26 23:05:36.476858000 +0000">, #<Post id: 5, title: "Web Development for Cats", content: nil, author_id: 1, created_at: "2022-10-26 23:20:29.449263000 +0000", updated_at: "2022-10-26 23:20:29.449263000 +0000">]>
#+end_src

I then followed along with yet another example:
#+begin_src ruby
samuelbanya@Samuels-MBP ~/hub/Development/code/phase-4/phase-4-active-record-associations-review-readme $ rails c
Warning: the running version of Bundler (2.1.2) is older than the version that created the lockfile (2.2.16). We suggest you to upgrade to the version that created the lockfile by running `gem install bundler:2.2.16`.
The dependency tzinfo-data (>= 0) will be unused by any of the platforms Bundler is installing for. Bundler is installing for ruby, x86_64-darwin-19, x86_64-darwin-21 but the dependency is only for x86-mingw32, x86-mswin32, x64-mingw32, java. To add those platforms to the bundle, run `bundle lock --add-platform x86-mingw32 x86-mswin32 x64-mingw32 java`.
Loading development environment (Rails 6.1.3.2)
2.7.0 :001 > post = Post.new(title: "Web Development for Dogs")
   (0.9ms)  SELECT sqlite_version(*)
2.7.0 :002 > new_author = post.create_author(name: "Lasandra Gulgowski")
  TRANSACTION (0.1ms)  begin transaction
  Author Create (0.6ms)  INSERT INTO "authors" ("name", "created_at", "updated_at") VALUES (?, ?, ?)  [["name", "Lasandra Gulgowski"], ["created_at", "2022-10-26 23:22:41.446728"], ["updated_at", "2022-10-26 23:22:41.446728"]]
  TRANSACTION (1.5ms)  commit transaction
2.7.0 :003 > post.save()
  TRANSACTION (0.1ms)  begin transaction
  Post Create (1.2ms)  INSERT INTO "posts" ("title", "author_id", "created_at", "updated_at") VALUES (?, ?, ?, ?)  [["title", "Web Development for Dogs"], ["author_id", 4], ["created_at", "2022-10-26 23:22:44.756806"], ["updated_at", "2022-10-26 23:22:44.756806"]]
  TRANSACTION (1.8ms)  commit transaction
 => true
2.7.0 :004 > post.author()
 => #<Author id: 4, name: "Lasandra Gulgowski", created_at: "2022-10-26 23:22:41.446728000 +0000", updated_at: "2022-10-26 23:22:41.446728000 +0000">
2.7.0 :005 > new_author.posts()
  Post Load (0.3ms)  SELECT "posts".* FROM "posts" WHERE "posts"."author_id" = ? /* loading for inspect */ LIMIT ?  [["author_id", 4], ["LIMIT", 11]]
 => #<ActiveRecord::Associations::CollectionProxy [#<Post id: 6, title: "Web Development for Dogs", content: nil, author_id: 4, created_at: "2022-10-26 23:22:44.756806000 +0000", updated_at: "2022-10-26 23:22:44.756806000 +0000">]>
#+end_src

I then utilized the following examples in the 'rails c' console for the topic of 'collection convenience'
#+begin_src ruby
samuelbanya@Samuels-MBP ~/hub/Development/code/phase-4/phase-4-active-record-associations-review-readme $ rails c
Warning: the running version of Bundler (2.1.2) is older than the version that created the lockfile (2.2.16). We suggest you to upgrade to the version that created the lockfile by running `gem install bundler:2.2.16`.
The dependency tzinfo-data (>= 0) will be unused by any of the platforms Bundler is installing for. Bundler is installing for ruby, x86_64-darwin-19, x86_64-darwin-21 but the dependency is only for x86-mingw32, x86-mswin32, x64-mingw32, java. To add those platforms to the bundle, run `bundle lock --add-platform x86-mingw32 x86-mswin32 x64-mingw32 java`.
Loading development environment (Rails 6.1.3.2)
2.7.0 :001 > author = Author.find_by(name: "Lasandra Gulgowski")
   (0.8ms)  SELECT sqlite_version(*)
  Author Load (0.2ms)  SELECT "authors".* FROM "authors" WHERE "authors"."name" = ? LIMIT ?  [["name", "Lasandra Gulgowski"], ["LIMIT", 1]]
2.7.0 :002 > author.posts()
  Post Load (0.2ms)  SELECT "posts".* FROM "posts" WHERE "posts"."author_id" = ? /* loading for inspect */ LIMIT ?  [["author_id", 4], ["LIMIT", 11]]
 => #<ActiveRecord::Associations::CollectionProxy [#<Post id: 6, title: "Web Development for Dogs", content: nil, author_id: 4, created_at: "2022-10-26 23:22:44.756806000 +0000", updated_at: "2022-10-26 23:22:44.756806000 +0000">]>
2.7.0 :003 > post = Post.new(title: "Web Development for Cats")
2.7.0 :004 > post.author()
 => nil
2.7.0 :005 > author.posts << post
  TRANSACTION (0.1ms)  begin transaction
  Post Create (1.0ms)  INSERT INTO "posts" ("title", "author_id", "created_at", "updated_at") VALUES (?, ?, ?, ?)  [["title", "Web Development for Cats"], ["author_id", 4], ["created_at", "2022-10-26 23:24:27.432448"], ["updated_at", "2022-10-26 23:24:27.432448"]]
  TRANSACTION (2.6ms)  commit transaction
  Post Load (0.3ms)  SELECT "posts".* FROM "posts" WHERE "posts"."author_id" = ? /* loading for inspect */ LIMIT ?  [["author_id", 4], ["LIMIT", 11]]
 => #<ActiveRecord::Associations::CollectionProxy [#<Post id: 6, title: "Web Development for Dogs", content: nil, author_id: 4, created_at: "2022-10-26 23:22:44.756806000 +0000", updated_at: "2022-10-26 23:22:44.756806000 +0000">, #<Post id: 7, title: "Web Development for Cats", content: nil, author_id: 4, created_at: "2022-10-26 23:24:27.432448000 +0000", updated_at: "2022-10-26 23:24:27.432448000 +0000">]>
2.7.0 :006 > post.author
 => #<Author id: 4, name: "Lasandra Gulgowski", created_at: "2022-10-26 23:22:41.446728000 +0000", updated_at: "2022-10-26 23:22:41.446728000 +0000">
#+end_src

I then modified the 'app/models/author.rb' Author model file to include the following 'has_one' relationship to the 'profile' model:
#+begin_src ruby
class Author < ApplicationRecord
    has_many :posts
    has_one :profile
end
#+end_src

I then modified the 'app/models/profile.rb' Profile model file to include the following 'belongs_to' relationship to the 'author' model:
#+begin_src ruby
class Profile < ApplicationRecord
    belongs_to :author
end
#+end_src

Rule Of Thumb:
- If you are not sure what model should have a specific Active Record association, add the 'belongs_to' association method to the model that has the 'foreign_key' column in its database table.

I then tested the new 'Author' and 'Profile' Active Record relationships with the following 'rails c' console output:
#+begin_src ruby
samuelbanya@Samuels-MBP ~/hub/Development/code/phase-4/phase-4-active-record-associations-review-readme $ rails c
2.7.0 :001 > author = Author.first()
   (1.0ms)  SELECT sqlite_version(*)
  Author Load (0.1ms)  SELECT "authors".* FROM "authors" ORDER BY "authors"."id" ASC LIMIT ?  [["LIMIT", 1]]
2.7.0 :002 > profile = Profile.first()
  Profile Load (0.2ms)  SELECT "profiles".* FROM "profiles" ORDER BY "profiles"."id" ASC LIMIT ?  [["LIMIT", 1]]
2.7.0 :003 > author.profile
  Profile Load (0.3ms)  SELECT "profiles".* FROM "profiles" WHERE "profiles"."author_id" = ? LIMIT ?  [["author_id", 1], ["LIMIT", 1]]
 => #<Profile id: 1, username: "ljenk", email: "ljenk@aol.com", bio: "a very dated reference", avatar_url: nil, facebook: nil, author_id: 1, created_at: "2022-10-26 23:05:36.468478000 +0000", updated_at: "2022-10-26 23:05:36.468478000 +0000">
2.7.0 :004 > profile.author
  Author Load (0.3ms)  SELECT "authors".* FROM "authors" WHERE "authors"."id" = ? LIMIT ?  [["id", 1], ["LIMIT", 1]]
 => #<Author id: 1, name: "Leeroy Jenkins", created_at: "2022-10-26 23:05:35.506242000 +0000", updated_at: "2022-10-26 23:05:35.506242000 +0000">
#+end_src

The lab then introduced the 'tags' model which will need a 'join table' relationship.

With this in mind, I modified the 'app/models/post.rb' Post model with the following contents:
#+begin_src ruby
class Post < ApplicationRecord
    belongs_to :author
    has_many :post_tags
end
#+end_src

I then modified the 'app/models/post_tag' Post Tag model with the following contents:
#+begin_src ruby
class PostTag < ApplicationRecord
    belongs_to :post
    belongs_to :tag
end
#+end_src

I then modified the 'app/models/tag' Tag model with the following contents:
#+begin_src ruby
class Tag < ApplicationRecord
    has_many :post_tags
end
#+end_src

I then modified the 'app/models/post.rb' Post model with the following contents:
#+begin_src ruby
class Post < ApplicationRecord
    belongs_to :author
    has_many :post_tags
    has_many :tags, through: :post_tags
end
#+end_src

I then modified the 'app/models/tag.rb' Tag model with the following contents:
#+begin_src ruby
class Tag < ApplicationRecord
    has_many :post_tags
    has_many :posts, through: :post_tags
end
#+end_src

I then tried out the new association methods via the 'join table' association type methods with the 'through:' method via the 'rails c' console:
#+begin_src ruby
samuelbanya@Samuels-MBP ~/hub/Development/code/phase-4/phase-4-active-record-associations-review-readme $ rails c
Warning: the running version of Bundler (2.1.2) is older than the version that created the lockfile (2.2.16). We suggest you to upgrade to the version that created the lockfile by running `gem install bundler:2.2.16`.
The dependency tzinfo-data (>= 0) will be unused by any of the platforms Bundler is installing for. Bundler is installing for ruby, x86_64-darwin-19, x86_64-darwin-21 but the dependency is only for x86-mingw32, x86-mswin32, x64-mingw32, java. To add those platforms to the bundle, run `bundle lock --add-platform x86-mingw32 x86-mswin32 x64-mingw32 java`.
Loading development environment (Rails 6.1.3.2)
2.7.0 :001 > post = Post.first()
   (0.9ms)  SELECT sqlite_version(*)
  Post Load (0.1ms)  SELECT "posts".* FROM "posts" ORDER BY "posts"."id" ASC LIMIT ?  [["LIMIT", 1]]
2.7.0 :002 > post.tags
  Tag Load (0.2ms)  SELECT "tags".* FROM "tags" INNER JOIN "post_tags" ON "tags"."id" = "post_tags"."tag_id" WHERE "post_tags"."post_id" = ? /* loading for inspect */ LIMIT ?  [["post_id", 1], ["LIMIT", 11]]
 => #<ActiveRecord::Associations::CollectionProxy [#<Tag id: 1, name: "eveniet", created_at: "2022-10-26 23:05:36.495129000 +0000", updated_at: "2022-10-26 23:05:36.495129000 +0000">, #<Tag id: 2, name: "est", created_at: "2022-10-26 23:05:36.498968000 +0000", updated_at: "2022-10-26 23:05:36.498968000 +0000">]>
2.7.0 :003 > tag = Tag.last()
  Tag Load (0.4ms)  SELECT "tags".* FROM "tags" ORDER BY "tags"."id" DESC LIMIT ?  [["LIMIT", 1]]
2.7.0 :004 > tag.posts()
  Post Load (0.2ms)  SELECT "posts".* FROM "posts" INNER JOIN "post_tags" ON "posts"."id" = "post_tags"."post_id" WHERE "post_tags"."tag_id" = ? /* loading for inspect */ LIMIT ?  [["tag_id", 3], ["LIMIT", 11]]
 => #<ActiveRecord::Associations::CollectionProxy [#<Post id: 2, title: "Quia tempore ducimus est.", content: "Alias impedit quasi. Reiciendis quod distinctio. A...", author_id: 2, created_at: "2022-10-26 23:05:36.480866000 +0000", updated_at: "2022-10-26 23:05:36.480866000 +0000">, #<Post id: 4, title: "Minus exercitationem rem quod.", content: "Laudantium maxime ab. Tempore et aperiam. Pariatur...", author_id: 3, created_at: "2022-10-26 23:05:36.488927000 +0000", updated_at: "2022-10-26 23:05:36.488927000 +0000">]>
#+end_src


Summary Of Related Relationships:
- One-to-one and many-to-one relationships: only require a single foreign key, which is stored in the 'subordinate' or 'owned' model. The other model can access data in the associated table via a has_one or has_many method, respectively.
- Many-to-many relationships: require a join table containing a foreign key for both models. The models need to use the has_many :through method to access data from the related table via the join table.

Answers To 'Check Your Understanding':
- Q1. In a one-to-many or one-to-one relationship, how do you determine which model's table should include a foreign key?
- Answer: The model with the 'belongs_to' Active Record association method will have the foreign key inside of its column values section
- Q2. What is a join table and under what circumstances do we need one?
- Answer: A join table is a table that joins two separate models together. We need one in situations like the one scenario presented earlier where you can have an endless amount of 'tags' associated with 'posts'. In that case, we used 'post_tags' as a 'join table' to join the two models together since it had foreign keys for both models to the left and right of it, aka 'post_id' and 'tag_id' columns for its foreign keys.
